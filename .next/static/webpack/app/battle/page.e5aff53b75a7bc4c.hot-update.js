"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/battle/page",{

/***/ "(app-pages-browser)/./src/services/paymentService.ts":
/*!****************************************!*\
  !*** ./src/services/paymentService.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PaymentService: function() { return /* binding */ PaymentService; }\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/ethers/lib.esm/providers/provider-browser.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"(app-pages-browser)/./node_modules/ethers/lib.esm/contract/contract.js\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n\n\nclass PaymentService {\n    static async getProvider() {\n        if (!window.ethereum) {\n            throw new Error(\"Please install MetaMask\");\n        }\n        return new ethers__WEBPACK_IMPORTED_MODULE_1__.BrowserProvider(window.ethereum);\n    }\n    static async payEntryFee(amount) {\n        try {\n            const ethereum = window.ethereum;\n            if (!ethereum) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_0__.toast.error(\"Please install MetaMask\");\n                return false;\n            }\n            await this.switchToSepolia(ethereum);\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_1__.BrowserProvider(ethereum);\n            const signer = await provider.getSigner();\n            // Connect to the contract\n            const contract = new ethers__WEBPACK_IMPORTED_MODULE_2__.Contract(this.CONTRACT_ADDRESS, this.ABI, signer);\n            // Get entry fee from contract\n            const entryFee = await contract.entryFee();\n            console.log(\"Entry fee from contract:\", entryFee.toString());\n            // Join battle by paying entry fee\n            const tx = await contract.joinBattle({\n                value: entryFee,\n                gasLimit: 100000 // Higher gas limit for contract interaction\n            });\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_0__.toast.success(\"Processing payment...\");\n            const receipt = await tx.wait();\n            console.log(\"Battle joined:\", receipt);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_0__.toast.success(\"Successfully joined battle!\");\n            return true;\n        } catch (error) {\n            console.error(\"Payment error:\", error);\n            if (error.code === 4001) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_0__.toast.error(\"Transaction rejected. Please try again.\");\n            } else if (error.code === -32603) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_0__.toast.error(\"Insufficient funds for transaction\");\n            } else {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_0__.toast.error(error.message || \"Payment failed\");\n            }\n            return false;\n        }\n    }\n    static async transferWinningsToWinner(winnerAddress, amount) {\n        try {\n            const ethereum = window.ethereum;\n            if (!ethereum) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_0__.toast.error(\"Please install MetaMask\");\n                return false;\n            }\n            await this.switchToSepolia(ethereum);\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_1__.BrowserProvider(ethereum);\n            const signer = await provider.getSigner();\n            // Connect to contract\n            const contract = new ethers__WEBPACK_IMPORTED_MODULE_2__.Contract(this.CONTRACT_ADDRESS, this.ABI, signer);\n            // Declare winner through contract\n            const tx = await contract.declareWinner(winnerAddress, {\n                gasLimit: 100000\n            });\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_0__.toast.success(\"Processing winner payment...\");\n            const receipt = await tx.wait();\n            console.log(\"Winner payment confirmed:\", receipt);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_0__.toast.success(\"Prize transferred to winner!\");\n            return true;\n        } catch (error) {\n            console.error(\"Prize transfer error:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_0__.toast.error(\"Failed to transfer prize to winner\");\n            return false;\n        }\n    }\n    static async switchToSepolia(ethereum) {\n        try {\n            await ethereum.request({\n                method: \"wallet_switchEthereumChain\",\n                params: [\n                    {\n                        chainId: this.SEPOLIA_CHAIN_ID\n                    }\n                ]\n            });\n        } catch (error) {\n            if (error.code === 4902) {\n                await ethereum.request({\n                    method: \"wallet_addEthereumChain\",\n                    params: [\n                        {\n                            chainId: this.SEPOLIA_CHAIN_ID,\n                            chainName: \"Sepolia Test Network\",\n                            nativeCurrency: {\n                                name: \"SepoliaETH\",\n                                symbol: \"SEP\",\n                                decimals: 18\n                            },\n                            rpcUrls: [\n                                \"https://sepolia.infura.io/v3/\"\n                            ],\n                            blockExplorerUrls: [\n                                \"https://sepolia.etherscan.io\"\n                            ]\n                        }\n                    ]\n                });\n            } else {\n                throw error;\n            }\n        }\n    }\n    // Add this function to generate random wallet addresses\n    static generateRandomWalletAddress() {\n        const chars = \"0123456789abcdef\";\n        let address = \"0x\";\n        // Generate 40 characters (20 bytes) for the address\n        for(let i = 0; i < 40; i++){\n            address += chars[Math.floor(Math.random() * chars.length)];\n        }\n        return address;\n    }\n    static async getConnectedWalletAddress() {\n        try {\n            if (!window.ethereum) {\n                throw new Error(\"Please install MetaMask\");\n            }\n            const ethereum = window.ethereum;\n            const accounts = await ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            return accounts[0];\n        } catch (error) {\n            console.error(\"Failed to get wallet address:\", error);\n            throw error;\n        }\n    }\n}\nPaymentService.CONTRACT_ADDRESS = \"YOUR_DEPLOYED_CONTRACT_ADDRESS\";\nPaymentService.SEPOLIA_CHAIN_ID = \"0xaa36a7\";\nPaymentService.ABI = [\n    \"function joinBattle() public payable\",\n    \"function declareWinner(address _winner) public\",\n    \"function entryFee() public view returns (uint256)\"\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9wYXltZW50U2VydmljZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdDO0FBQ1E7QUFRakMsTUFBTUU7SUFTWCxhQUFxQkMsY0FBYztRQUNqQyxJQUFJLENBQUMsT0FBZ0JFLFFBQVEsRUFBRTtZQUM3QixNQUFNLElBQUlDLE1BQU07UUFDbEI7UUFDQSxPQUFPLElBQUlOLG1EQUFzQixDQUFDLE9BQWdCSyxRQUFRO0lBQzVEO0lBRUEsYUFBYUcsWUFBWUMsTUFBYyxFQUFvQjtRQUN6RCxJQUFJO1lBQ0YsTUFBTUosV0FBVyxPQUFnQkEsUUFBUTtZQUN6QyxJQUFJLENBQUNBLFVBQVU7Z0JBQ2JKLGtEQUFLQSxDQUFDUyxLQUFLLENBQUM7Z0JBQ1osT0FBTztZQUNUO1lBRUEsTUFBTSxJQUFJLENBQUNDLGVBQWUsQ0FBQ047WUFFM0IsTUFBTU8sV0FBVyxJQUFJWixtREFBc0IsQ0FBQ0s7WUFDNUMsTUFBTVEsU0FBUyxNQUFNRCxTQUFTRSxTQUFTO1lBRXZDLDBCQUEwQjtZQUMxQixNQUFNQyxXQUFXLElBQUlmLDRDQUFlLENBQ2xDLElBQUksQ0FBQ2lCLGdCQUFnQixFQUNyQixJQUFJLENBQUNDLEdBQUcsRUFDUkw7WUFHRiw4QkFBOEI7WUFDOUIsTUFBTU0sV0FBVyxNQUFNSixTQUFTSSxRQUFRO1lBQ3hDQyxRQUFRQyxHQUFHLENBQUMsNEJBQTRCRixTQUFTRyxRQUFRO1lBRXpELGtDQUFrQztZQUNsQyxNQUFNQyxLQUFLLE1BQU1SLFNBQVNTLFVBQVUsQ0FBQztnQkFDbkNDLE9BQU9OO2dCQUNQTyxVQUFVLE9BQU8sNENBQTRDO1lBQy9EO1lBRUF6QixrREFBS0EsQ0FBQzBCLE9BQU8sQ0FBQztZQUNkLE1BQU1DLFVBQVUsTUFBTUwsR0FBR00sSUFBSTtZQUU3QlQsUUFBUUMsR0FBRyxDQUFDLGtCQUFrQk87WUFDOUIzQixrREFBS0EsQ0FBQzBCLE9BQU8sQ0FBQztZQUVkLE9BQU87UUFFVCxFQUFFLE9BQU9qQixPQUFZO1lBQ25CVSxRQUFRVixLQUFLLENBQUMsa0JBQWtCQTtZQUNoQyxJQUFJQSxNQUFNb0IsSUFBSSxLQUFLLE1BQU07Z0JBQ3ZCN0Isa0RBQUtBLENBQUNTLEtBQUssQ0FBQztZQUNkLE9BQU8sSUFBSUEsTUFBTW9CLElBQUksS0FBSyxDQUFDLE9BQU87Z0JBQ2hDN0Isa0RBQUtBLENBQUNTLEtBQUssQ0FBQztZQUNkLE9BQU87Z0JBQ0xULGtEQUFLQSxDQUFDUyxLQUFLLENBQUNBLE1BQU1xQixPQUFPLElBQUk7WUFDL0I7WUFDQSxPQUFPO1FBQ1Q7SUFDRjtJQUVBLGFBQWFDLHlCQUNYQyxhQUFxQixFQUNyQnhCLE1BQWMsRUFDSTtRQUNsQixJQUFJO1lBQ0YsTUFBTUosV0FBVyxPQUFnQkEsUUFBUTtZQUN6QyxJQUFJLENBQUNBLFVBQVU7Z0JBQ2JKLGtEQUFLQSxDQUFDUyxLQUFLLENBQUM7Z0JBQ1osT0FBTztZQUNUO1lBRUEsTUFBTSxJQUFJLENBQUNDLGVBQWUsQ0FBQ047WUFFM0IsTUFBTU8sV0FBVyxJQUFJWixtREFBc0IsQ0FBQ0s7WUFDNUMsTUFBTVEsU0FBUyxNQUFNRCxTQUFTRSxTQUFTO1lBRXZDLHNCQUFzQjtZQUN0QixNQUFNQyxXQUFXLElBQUlmLDRDQUFlLENBQ2xDLElBQUksQ0FBQ2lCLGdCQUFnQixFQUNyQixJQUFJLENBQUNDLEdBQUcsRUFDUkw7WUFHRixrQ0FBa0M7WUFDbEMsTUFBTVUsS0FBSyxNQUFNUixTQUFTbUIsYUFBYSxDQUFDRCxlQUFlO2dCQUNyRFAsVUFBVTtZQUNaO1lBRUF6QixrREFBS0EsQ0FBQzBCLE9BQU8sQ0FBQztZQUNkLE1BQU1DLFVBQVUsTUFBTUwsR0FBR00sSUFBSTtZQUU3QlQsUUFBUUMsR0FBRyxDQUFDLDZCQUE2Qk87WUFDekMzQixrREFBS0EsQ0FBQzBCLE9BQU8sQ0FBQztZQUVkLE9BQU87UUFFVCxFQUFFLE9BQU9qQixPQUFZO1lBQ25CVSxRQUFRVixLQUFLLENBQUMseUJBQXlCQTtZQUN2Q1Qsa0RBQUtBLENBQUNTLEtBQUssQ0FBQztZQUNaLE9BQU87UUFDVDtJQUNGO0lBRUEsYUFBcUJDLGdCQUFnQk4sUUFBYSxFQUFpQjtRQUNqRSxJQUFJO1lBQ0YsTUFBTUEsU0FBUzhCLE9BQU8sQ0FBQztnQkFDckJDLFFBQVE7Z0JBQ1JDLFFBQVE7b0JBQUM7d0JBQUVDLFNBQVMsSUFBSSxDQUFDQyxnQkFBZ0I7b0JBQUM7aUJBQUU7WUFDOUM7UUFDRixFQUFFLE9BQU83QixPQUFZO1lBQ25CLElBQUlBLE1BQU1vQixJQUFJLEtBQUssTUFBTTtnQkFDdkIsTUFBTXpCLFNBQVM4QixPQUFPLENBQUM7b0JBQ3JCQyxRQUFRO29CQUNSQyxRQUFRO3dCQUFDOzRCQUNQQyxTQUFTLElBQUksQ0FBQ0MsZ0JBQWdCOzRCQUM5QkMsV0FBVzs0QkFDWEMsZ0JBQWdCO2dDQUNkQyxNQUFNO2dDQUNOQyxRQUFRO2dDQUNSQyxVQUFVOzRCQUNaOzRCQUNBQyxTQUFTO2dDQUFDOzZCQUFnQzs0QkFDMUNDLG1CQUFtQjtnQ0FBQzs2QkFBK0I7d0JBQ3JEO3FCQUFFO2dCQUNKO1lBQ0YsT0FBTztnQkFDTCxNQUFNcEM7WUFDUjtRQUNGO0lBQ0Y7SUFFQSx3REFBd0Q7SUFDeEQsT0FBT3FDLDhCQUFzQztRQUMzQyxNQUFNQyxRQUFRO1FBQ2QsSUFBSUMsVUFBVTtRQUNkLG9EQUFvRDtRQUNwRCxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSSxJQUFJQSxJQUFLO1lBQzNCRCxXQUFXRCxLQUFLLENBQUNHLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsTUFBTSxLQUFLTCxNQUFNTSxNQUFNLEVBQUU7UUFDNUQ7UUFDQSxPQUFPTDtJQUNUO0lBRUEsYUFBYU0sNEJBQTZDO1FBQ3hELElBQUk7WUFDRixJQUFJLENBQUMsT0FBZ0JsRCxRQUFRLEVBQUU7Z0JBQzdCLE1BQU0sSUFBSUMsTUFBTTtZQUNsQjtZQUVBLE1BQU1ELFdBQVcsT0FBZ0JBLFFBQVE7WUFDekMsTUFBTW1ELFdBQVcsTUFBTW5ELFNBQVM4QixPQUFPLENBQUM7Z0JBQ3RDQyxRQUFRO1lBQ1Y7WUFFQSxPQUFPb0IsUUFBUSxDQUFDLEVBQUU7UUFDcEIsRUFBRSxPQUFPOUMsT0FBTztZQUNkVSxRQUFRVixLQUFLLENBQUMsaUNBQWlDQTtZQUMvQyxNQUFNQTtRQUNSO0lBQ0Y7QUFDRjtBQXRLYVIsZUFDYWUsbUJBQW1CO0FBRGhDZixlQUVhcUMsbUJBQW1CO0FBRmhDckMsZUFHYWdCLE1BQU07SUFDNUI7SUFDQTtJQUNBO0NBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3NlcnZpY2VzL3BheW1lbnRTZXJ2aWNlLnRzP2U2YmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXRoZXJzIH0gZnJvbSAnZXRoZXJzJztcbmltcG9ydCB7IHRvYXN0IH0gZnJvbSAncmVhY3QtaG90LXRvYXN0JztcblxuaW50ZXJmYWNlIFBheW1lbnREZXRhaWxzIHtcbiAgYW1vdW50OiBudW1iZXI7XG4gIHBsYXllck5hbWU6IHN0cmluZztcbiAgd2FsbGV0QWRkcmVzczogc3RyaW5nO1xufVxuXG5leHBvcnQgY2xhc3MgUGF5bWVudFNlcnZpY2Uge1xuICBwcml2YXRlIHN0YXRpYyByZWFkb25seSBDT05UUkFDVF9BRERSRVNTID0gXCJZT1VSX0RFUExPWUVEX0NPTlRSQUNUX0FERFJFU1NcIjtcbiAgcHJpdmF0ZSBzdGF0aWMgcmVhZG9ubHkgU0VQT0xJQV9DSEFJTl9JRCA9ICcweGFhMzZhNyc7XG4gIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IEFCSSA9IFtcbiAgICBcImZ1bmN0aW9uIGpvaW5CYXR0bGUoKSBwdWJsaWMgcGF5YWJsZVwiLFxuICAgIFwiZnVuY3Rpb24gZGVjbGFyZVdpbm5lcihhZGRyZXNzIF93aW5uZXIpIHB1YmxpY1wiLFxuICAgIFwiZnVuY3Rpb24gZW50cnlGZWUoKSBwdWJsaWMgdmlldyByZXR1cm5zICh1aW50MjU2KVwiXG4gIF07XG5cbiAgcHJpdmF0ZSBzdGF0aWMgYXN5bmMgZ2V0UHJvdmlkZXIoKSB7XG4gICAgaWYgKCEod2luZG93IGFzIGFueSkuZXRoZXJldW0pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignUGxlYXNlIGluc3RhbGwgTWV0YU1hc2snKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBldGhlcnMuQnJvd3NlclByb3ZpZGVyKCh3aW5kb3cgYXMgYW55KS5ldGhlcmV1bSk7XG4gIH1cblxuICBzdGF0aWMgYXN5bmMgcGF5RW50cnlGZWUoYW1vdW50OiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZXRoZXJldW0gPSAod2luZG93IGFzIGFueSkuZXRoZXJldW07XG4gICAgICBpZiAoIWV0aGVyZXVtKSB7XG4gICAgICAgIHRvYXN0LmVycm9yKCdQbGVhc2UgaW5zdGFsbCBNZXRhTWFzaycpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGF3YWl0IHRoaXMuc3dpdGNoVG9TZXBvbGlhKGV0aGVyZXVtKTtcblxuICAgICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgZXRoZXJzLkJyb3dzZXJQcm92aWRlcihldGhlcmV1bSk7XG4gICAgICBjb25zdCBzaWduZXIgPSBhd2FpdCBwcm92aWRlci5nZXRTaWduZXIoKTtcbiAgICAgIFxuICAgICAgLy8gQ29ubmVjdCB0byB0aGUgY29udHJhY3RcbiAgICAgIGNvbnN0IGNvbnRyYWN0ID0gbmV3IGV0aGVycy5Db250cmFjdChcbiAgICAgICAgdGhpcy5DT05UUkFDVF9BRERSRVNTLFxuICAgICAgICB0aGlzLkFCSSxcbiAgICAgICAgc2lnbmVyXG4gICAgICApO1xuXG4gICAgICAvLyBHZXQgZW50cnkgZmVlIGZyb20gY29udHJhY3RcbiAgICAgIGNvbnN0IGVudHJ5RmVlID0gYXdhaXQgY29udHJhY3QuZW50cnlGZWUoKTtcbiAgICAgIGNvbnNvbGUubG9nKCdFbnRyeSBmZWUgZnJvbSBjb250cmFjdDonLCBlbnRyeUZlZS50b1N0cmluZygpKTtcblxuICAgICAgLy8gSm9pbiBiYXR0bGUgYnkgcGF5aW5nIGVudHJ5IGZlZVxuICAgICAgY29uc3QgdHggPSBhd2FpdCBjb250cmFjdC5qb2luQmF0dGxlKHtcbiAgICAgICAgdmFsdWU6IGVudHJ5RmVlLFxuICAgICAgICBnYXNMaW1pdDogMTAwMDAwIC8vIEhpZ2hlciBnYXMgbGltaXQgZm9yIGNvbnRyYWN0IGludGVyYWN0aW9uXG4gICAgICB9KTtcblxuICAgICAgdG9hc3Quc3VjY2VzcygnUHJvY2Vzc2luZyBwYXltZW50Li4uJyk7XG4gICAgICBjb25zdCByZWNlaXB0ID0gYXdhaXQgdHgud2FpdCgpO1xuICAgICAgXG4gICAgICBjb25zb2xlLmxvZygnQmF0dGxlIGpvaW5lZDonLCByZWNlaXB0KTtcbiAgICAgIHRvYXN0LnN1Y2Nlc3MoJ1N1Y2Nlc3NmdWxseSBqb2luZWQgYmF0dGxlIScpO1xuICAgICAgXG4gICAgICByZXR1cm4gdHJ1ZTtcblxuICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1BheW1lbnQgZXJyb3I6JywgZXJyb3IpO1xuICAgICAgaWYgKGVycm9yLmNvZGUgPT09IDQwMDEpIHtcbiAgICAgICAgdG9hc3QuZXJyb3IoJ1RyYW5zYWN0aW9uIHJlamVjdGVkLiBQbGVhc2UgdHJ5IGFnYWluLicpO1xuICAgICAgfSBlbHNlIGlmIChlcnJvci5jb2RlID09PSAtMzI2MDMpIHtcbiAgICAgICAgdG9hc3QuZXJyb3IoJ0luc3VmZmljaWVudCBmdW5kcyBmb3IgdHJhbnNhY3Rpb24nKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRvYXN0LmVycm9yKGVycm9yLm1lc3NhZ2UgfHwgJ1BheW1lbnQgZmFpbGVkJyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGFzeW5jIHRyYW5zZmVyV2lubmluZ3NUb1dpbm5lcihcbiAgICB3aW5uZXJBZGRyZXNzOiBzdHJpbmcsXG4gICAgYW1vdW50OiBzdHJpbmdcbiAgKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGV0aGVyZXVtID0gKHdpbmRvdyBhcyBhbnkpLmV0aGVyZXVtO1xuICAgICAgaWYgKCFldGhlcmV1bSkge1xuICAgICAgICB0b2FzdC5lcnJvcignUGxlYXNlIGluc3RhbGwgTWV0YU1hc2snKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBhd2FpdCB0aGlzLnN3aXRjaFRvU2Vwb2xpYShldGhlcmV1bSk7XG5cbiAgICAgIGNvbnN0IHByb3ZpZGVyID0gbmV3IGV0aGVycy5Ccm93c2VyUHJvdmlkZXIoZXRoZXJldW0pO1xuICAgICAgY29uc3Qgc2lnbmVyID0gYXdhaXQgcHJvdmlkZXIuZ2V0U2lnbmVyKCk7XG4gICAgICBcbiAgICAgIC8vIENvbm5lY3QgdG8gY29udHJhY3RcbiAgICAgIGNvbnN0IGNvbnRyYWN0ID0gbmV3IGV0aGVycy5Db250cmFjdChcbiAgICAgICAgdGhpcy5DT05UUkFDVF9BRERSRVNTLFxuICAgICAgICB0aGlzLkFCSSxcbiAgICAgICAgc2lnbmVyXG4gICAgICApO1xuXG4gICAgICAvLyBEZWNsYXJlIHdpbm5lciB0aHJvdWdoIGNvbnRyYWN0XG4gICAgICBjb25zdCB0eCA9IGF3YWl0IGNvbnRyYWN0LmRlY2xhcmVXaW5uZXIod2lubmVyQWRkcmVzcywge1xuICAgICAgICBnYXNMaW1pdDogMTAwMDAwXG4gICAgICB9KTtcblxuICAgICAgdG9hc3Quc3VjY2VzcygnUHJvY2Vzc2luZyB3aW5uZXIgcGF5bWVudC4uLicpO1xuICAgICAgY29uc3QgcmVjZWlwdCA9IGF3YWl0IHR4LndhaXQoKTtcbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coJ1dpbm5lciBwYXltZW50IGNvbmZpcm1lZDonLCByZWNlaXB0KTtcbiAgICAgIHRvYXN0LnN1Y2Nlc3MoJ1ByaXplIHRyYW5zZmVycmVkIHRvIHdpbm5lciEnKTtcbiAgICAgIFxuICAgICAgcmV0dXJuIHRydWU7XG5cbiAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdQcml6ZSB0cmFuc2ZlciBlcnJvcjonLCBlcnJvcik7XG4gICAgICB0b2FzdC5lcnJvcignRmFpbGVkIHRvIHRyYW5zZmVyIHByaXplIHRvIHdpbm5lcicpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgc3RhdGljIGFzeW5jIHN3aXRjaFRvU2Vwb2xpYShldGhlcmV1bTogYW55KTogUHJvbWlzZTx2b2lkPiB7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IGV0aGVyZXVtLnJlcXVlc3Qoe1xuICAgICAgICBtZXRob2Q6ICd3YWxsZXRfc3dpdGNoRXRoZXJldW1DaGFpbicsXG4gICAgICAgIHBhcmFtczogW3sgY2hhaW5JZDogdGhpcy5TRVBPTElBX0NIQUlOX0lEIH1dXG4gICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICBpZiAoZXJyb3IuY29kZSA9PT0gNDkwMikge1xuICAgICAgICBhd2FpdCBldGhlcmV1bS5yZXF1ZXN0KHtcbiAgICAgICAgICBtZXRob2Q6ICd3YWxsZXRfYWRkRXRoZXJldW1DaGFpbicsXG4gICAgICAgICAgcGFyYW1zOiBbe1xuICAgICAgICAgICAgY2hhaW5JZDogdGhpcy5TRVBPTElBX0NIQUlOX0lELFxuICAgICAgICAgICAgY2hhaW5OYW1lOiAnU2Vwb2xpYSBUZXN0IE5ldHdvcmsnLFxuICAgICAgICAgICAgbmF0aXZlQ3VycmVuY3k6IHtcbiAgICAgICAgICAgICAgbmFtZTogJ1NlcG9saWFFVEgnLFxuICAgICAgICAgICAgICBzeW1ib2w6ICdTRVAnLFxuICAgICAgICAgICAgICBkZWNpbWFsczogMThcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBycGNVcmxzOiBbJ2h0dHBzOi8vc2Vwb2xpYS5pbmZ1cmEuaW8vdjMvJ10sXG4gICAgICAgICAgICBibG9ja0V4cGxvcmVyVXJsczogWydodHRwczovL3NlcG9saWEuZXRoZXJzY2FuLmlvJ11cbiAgICAgICAgICB9XVxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIEFkZCB0aGlzIGZ1bmN0aW9uIHRvIGdlbmVyYXRlIHJhbmRvbSB3YWxsZXQgYWRkcmVzc2VzXG4gIHN0YXRpYyBnZW5lcmF0ZVJhbmRvbVdhbGxldEFkZHJlc3MoKTogc3RyaW5nIHtcbiAgICBjb25zdCBjaGFycyA9ICcwMTIzNDU2Nzg5YWJjZGVmJztcbiAgICBsZXQgYWRkcmVzcyA9ICcweCc7XG4gICAgLy8gR2VuZXJhdGUgNDAgY2hhcmFjdGVycyAoMjAgYnl0ZXMpIGZvciB0aGUgYWRkcmVzc1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNDA7IGkrKykge1xuICAgICAgYWRkcmVzcyArPSBjaGFyc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjaGFycy5sZW5ndGgpXTtcbiAgICB9XG4gICAgcmV0dXJuIGFkZHJlc3M7XG4gIH1cblxuICBzdGF0aWMgYXN5bmMgZ2V0Q29ubmVjdGVkV2FsbGV0QWRkcmVzcygpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHRyeSB7XG4gICAgICBpZiAoISh3aW5kb3cgYXMgYW55KS5ldGhlcmV1bSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1BsZWFzZSBpbnN0YWxsIE1ldGFNYXNrJyk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGV0aGVyZXVtID0gKHdpbmRvdyBhcyBhbnkpLmV0aGVyZXVtO1xuICAgICAgY29uc3QgYWNjb3VudHMgPSBhd2FpdCBldGhlcmV1bS5yZXF1ZXN0KHsgXG4gICAgICAgIG1ldGhvZDogJ2V0aF9yZXF1ZXN0QWNjb3VudHMnIFxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIHJldHVybiBhY2NvdW50c1swXTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGdldCB3YWxsZXQgYWRkcmVzczonLCBlcnJvcik7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gIH1cbn0gIl0sIm5hbWVzIjpbImV0aGVycyIsInRvYXN0IiwiUGF5bWVudFNlcnZpY2UiLCJnZXRQcm92aWRlciIsIndpbmRvdyIsImV0aGVyZXVtIiwiRXJyb3IiLCJCcm93c2VyUHJvdmlkZXIiLCJwYXlFbnRyeUZlZSIsImFtb3VudCIsImVycm9yIiwic3dpdGNoVG9TZXBvbGlhIiwicHJvdmlkZXIiLCJzaWduZXIiLCJnZXRTaWduZXIiLCJjb250cmFjdCIsIkNvbnRyYWN0IiwiQ09OVFJBQ1RfQUREUkVTUyIsIkFCSSIsImVudHJ5RmVlIiwiY29uc29sZSIsImxvZyIsInRvU3RyaW5nIiwidHgiLCJqb2luQmF0dGxlIiwidmFsdWUiLCJnYXNMaW1pdCIsInN1Y2Nlc3MiLCJyZWNlaXB0Iiwid2FpdCIsImNvZGUiLCJtZXNzYWdlIiwidHJhbnNmZXJXaW5uaW5nc1RvV2lubmVyIiwid2lubmVyQWRkcmVzcyIsImRlY2xhcmVXaW5uZXIiLCJyZXF1ZXN0IiwibWV0aG9kIiwicGFyYW1zIiwiY2hhaW5JZCIsIlNFUE9MSUFfQ0hBSU5fSUQiLCJjaGFpbk5hbWUiLCJuYXRpdmVDdXJyZW5jeSIsIm5hbWUiLCJzeW1ib2wiLCJkZWNpbWFscyIsInJwY1VybHMiLCJibG9ja0V4cGxvcmVyVXJscyIsImdlbmVyYXRlUmFuZG9tV2FsbGV0QWRkcmVzcyIsImNoYXJzIiwiYWRkcmVzcyIsImkiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJsZW5ndGgiLCJnZXRDb25uZWN0ZWRXYWxsZXRBZGRyZXNzIiwiYWNjb3VudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/paymentService.ts\n"));

/***/ })

});